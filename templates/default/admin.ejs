<%- include('./header', {}) %>
<script type="text/javascript" src="//js.nicedit.com/nicEdit-latest.js"></script>

<title><%= __('admin.head.admin') %> - <%= config.title %></title>
<script>
$(function(){
  //. ログインしている
  $('#navbar').html( '<li class="nav-item"><a class="nav-link" href="#" title="Logout" onClick="logout()"><span class="glyphicon glyphicon-user"></span> <%= user.name %>(Logout)</a></li>' );

<%
if( user.role == 0 ){
%>
  getUsers();
<%
}
%>

  getConfig();
  getDocuments();
  getAttachments();

});

function getConfig(){
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  $.ajax({
    type: 'GET',
    url: '/config',
    success: function( result ){
      obj.remove();
      console.log( result );
      if( result.config ){
        $('#navbar_title').val( result.config.title );
        $('#config_id').val( result.config._id );
        $('#config_rev').val( result.config._rev );
        $('#config_title').val( result.config.title );
        $('#config_desc').val( result.config.desc );
        $('#config_url').val( result.config.url );
        $('#config_image_url').val( result.config.image_url );
      }
    },
    error: function( err ){
      obj.remove();
      console.log( err );
    }
  });
}

function getUsers(){
  $('#users_table_tbody').html( '' );
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  $.ajax({
    type: 'GET',
    url: '/docs?type=user',
    success: function( result ){
      obj.remove();
      //console.log( result );
      if( result.status ){
        $('#users_table_tbody').append( tr );
        var users = result.docs;
        var cnt = 1;
        users.forEach( function( user ){
          var tr = '<tr>'
            + '<td>' + ( cnt ++ ) + '</td>'
            + '<td>' + user._id + '</td>'
            + '<td>' + user.password + '</td>'
            + '<td>' + user.name + '</td>'
            + '<td>' + user.email + '</td>'
            + '<td>' + user.role + '</td>'
            + '<td>' + timestamp2datetime( user.timestamp ) + '</td>'
            + '<td>'
            + "<input type='button' value='<%= __('users.buttonlabel.edit') %>' class='btn btn-success' onClick='editUser(" + JSON.stringify(user) + ")'>"
            + "<input type='button' value='<%= __('users.buttonlabel.delete') %>' class='btn btn-warning' onClick='deleteUser(\"" + user._id + "\")'/>"
            + '</td>'
            + '</tr>';
          $('#users_table_tbody').append( tr );
        });
        var tr = "<tr>"
          + "<td>-<input type='hidden' id='user_rev' value=''/></td>"
          + "<td><input type='text' id='user_id' placeholder='<%= __('users.placeholder.id' ) %>'/></td>"
          + "<td><input type='password' id='user_password' placeholder='<%= __('users.placeholder.password' ) %>'/></td>"
          + "<td><input type='text' id='user_name' placeholder='<%= __('users.placeholder.name' ) %>'/></td>"
          + "<td><input type='text' id='user_email' placeholder='<%= __('users.placeholder.email' ) %>'/></td>"
          + "<td><input type='text' style='width:100px;' id='user_role' placeholder='<%= __('users.placeholder.role' ) %>'/></td>"
          + "<td>-</td>"
          + "<td><input type='button' class='btn btn-primary' value='<%= __('users.buttonlabel.update') %>' onClick='updateUser();'/></td>"
          + "</tr>";
        $('#users_table_tbody').append( tr );
      }
    },
    error: function( err ){
      obj.remove();
      console.log( err );
    }
  });
}

function getDocuments(){
  $('#documents_table_tbody').html( '' );
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  $.ajax({
    type: 'GET',
    url: '/docs?type=document',
    success: function( result ){
      //console.log( result );
      obj.remove();
      if( result.status ){
        var documents = result.docs;
        var cnt = 1;
        documents.forEach( function( doc ){
          var tr = '<tr>'
            + '<td>' + ( cnt ++ ) + '</td>'
            + '<td>' + doc.title + '</td>'
            + '<td>' + doc.body + '</td>'
            + '<td>' + doc.category + '</td>'
            + '<td>' + doc.status + '</td>'
            + '<td>' + doc.user.name + '</td>'
            + '<td>' + timestamp2datetime( doc.timestamp ) + '</td>'
            + '<td>'
            + "<input type='button' value='<%= __('documents.buttonlabel.edit') %>' class='btn btn-success' onClick='editDocument(" + JSON.stringify(doc) + ")'>"
            + "<input type='button' value='<%= __('documents.buttonlabel.delete') %>' class='btn btn-warning' onClick='deleteDocument(\"" + doc._id + "\")'/>"
            + '</td>'
            + '</tr>';
          $('#documents_table_tbody').append( tr );
        });
        var tr = "<tr>"
          + "<td>-<input type='hidden' id='document_id' value=''/><input type='hidden' id='document_rev' value=''/></td>"
          + "<td><input type='text' id='document_title' placeholder='<%= __('documents.placeholder.title' ) %>'/></td>"
          + "<td><textarea id='document_body' name='document_body'/></textarea></td>"
          + "<td><input type='text' style='width:100px;' id='document_category' placeholder='<%= __('documents.placeholder.category' ) %>'/></td>"
          + "<td><input type='text' style='width:100px;' id='document_status' placeholder='<%= __('documents.placeholder.status' ) %>'/></td>"
          + "<td>-</td>"
          + "<td>-</td>"
          + "<td><input type='button' class='btn btn-primary' value='<%= __('documents.buttonlabel.update') %>' onClick='updateDocument();'/></td>"
          + "</tr>";
        $('#documents_table_tbody').append( tr );
        nicEditors.allTextAreas();
      }
    },
    error: function( err ){
      obj.remove();
      console.log( err );
    }
  });
}

function getAttachments(){
  $('#attachments_table_tbody').html( '' );
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  $.ajax({
    type: 'GET',
    url: '/docs?type=attachment',
    success: function( result ){
      obj.remove();
      //console.log( result );
      if( result.status ){
        var attachments = result.docs;
        var cnt = 1;
        attachments.forEach( function( attachment ){
          var tr = '<tr>'
            + '<td>' + ( cnt ++ ) + '</td>'
            + '<td><a target="_blank" href="/attachment/' + attachment._id + '">' + attachment._id + '</a></td>'
            + '<td>' + attachment.filename + '</td>'
            + '<td>' + attachment.name + '</td>'
            + '<td>' + attachment.user.name + '</td>'
            + '<td>' + timestamp2datetime( attachment.timestamp ) + '</td>'
            + '<td>'
            //+ "<input type='button' value='<%= __('attachments.buttonlabel.edit') %>' class='btn btn-success' onClick='editAttachment(" + JSON.stringify(attachment) + ")'>"
            + "<input type='button' value='<%= __('attachments.buttonlabel.delete') %>' class='btn btn-warning' onClick='deleteAttachment(\"" + attachment._id + "\")'/>"
            + '</td>'
            + '</tr>';
          $('#attachments_table_tbody').append( tr );
        });
        var tr = "<tr>"
          + "<td>-<input type='hidden' id='attachment_id' value=''/><input type='hidden' id='attachment_rev' value=''/></td>"
          + "<td><form id='form1' enctype='multipart/form-data'><input type='file' id='attachment_file' name='attachment_file'/></form></td>"
          + "<td><input type='text' id='attachment_filename' placeholder='<%= __('attachments.placeholder.filename' ) %>' readonly/></td>"
          + "<td><input type='text' id='attachment_name' placeholder='<%= __('attachments.placeholder.name' ) %>'/></td>"
          + "<td>-</td>"
          + "<td>-</td>"
          + "<td><input type='button' class='btn btn-primary' value='<%= __('attachments.buttonlabel.update') %>' onClick='updateAttachment();'/></td>"
          + "</tr>";
        $('#attachments_table_tbody').append( tr );

        document.getElementById( 'attachment_file' ).addEventListener( 'change', handleFileSelect, false );
      }
    },
    error: function( err ){
      obj.remove();
      console.log( err );
    }
  });
}

function logout(){
  if( window.confirm( 'Logout?' ) ){
    var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
    $.ajax({
      type: 'POST',
      url: '/logout',
      data: {},
      success: function( data ){
        obj.remove();
        window.location.href = '/';
      },
      error: function(){
        obj.remove();
        window.location.href = '/';
      }
    });
  }
}

function updateConfig(){
  var id = $('#config_id').val();
  var rev = $('#config_rev').val();
  var title = $('#config_title').val();
  var desc = $('#config_desc').val();
  var url = $('#config_url').val();
  var image_url = $('#config_image_url').val();
  var data = { _id: id, title: title, desc: desc, url: url, image_url: image_url };
  if( rev ){ data['_rev'] = rev; }
  $.ajax({
    type: 'POST',
    url: '/config',
    data: data,
    success: function( data ){
      console.log( data );
      getConfig();
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'updateConfig: error' );
    }
  });
}

function updateUser(){
  var id = $('#user_id').val();
  var rev = $('#user_rev').val();
  var password = $('#user_password').val();
  var name = $('#user_name').val();
  var email = $('#user_email').val();
  var role = $('#user_role').val();
  var data = { _id: id, type: 'user', password: password, name: name, email: email, role: role };
  if( rev ){ data['_rev'] = rev; }

  $.ajax({
    type: 'POST',
    url: '/user',
    data: data,
    success: function( data ){
      console.log( data );
      getUsers();
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'updateUser: error' );
    }
  });
}

function editUser(user){
  $('#user_id').val( user._id );
  $('#user_rev').val( user._rev );
  $('#user_password').val( user.password );
  $('#user_name').val( user.name );
  $('#user_email').val( user.email );
  $('#user_role').val( user.role );
}

function deleteUser(id){
  if( window.confirm( 'Delete User?' ) ){
    console.log( 'deleteUser(): id=' + id );

    $.ajax({
      type: 'DELETE',
      url: '/user/' + id,
      data: {},
      success: function( data ){
        getUsers();
      },
      error: function( jqXHR, textStatus, errorThrown ){
        console.log( textStatus );
        console.log( errorThrown );
        console.log( 'updateUser: error' );
        getUsers();
      }
    });
  }
}

function updateDocument(){
  var id = $('#document_id').val();
  var rev = $('#document_rev').val();
  var title = $('#document_title').val();
  //var body = $('#document_body').html();
  var body = nicEditors.findEditor('document_body').getContent();
  var category = $('#document_category').val();
  var status = $('#document_status').val();
  var data = { _id: id, type: 'document', title: title, body: body, category: category, status: status };
  if( rev ){ data['_rev'] = rev; }

  $.ajax({
    type: 'POST',
    url: '/document',
    data: data,
    success: function( data ){
      console.log( data );
      getDocuments();
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'updateDocument: error' );
    }
  });
}

function editDocument(doc){
  $('#document_id').val( doc._id );
  $('#document_rev').val( doc._rev );
  $('#document_title').val( doc.title );
  //$('#document_body').val( doc.body );
  nicEditors.findEditor('document_body').setContent(doc.body);
  $('#document_category').val( doc.category );
  $('#document_status').val( doc.status );
  $('#document_user_name').val( doc.user.name );

  nicEditors.allTextAreas();
}

function deleteDocument(id){
  if( window.confirm( 'Delete Document?' ) ){
    console.log( 'deleteDocument(): id=' + id );

    $.ajax({
      type: 'DELETE',
      url: '/document/' + id,
      data: {},
      success: function( data ){
        getDocuments();
      },
      error: function( jqXHR, textStatus, errorThrown ){
        console.log( textStatus );
        console.log( errorThrown );
        console.log( 'updateDocument: error' );
        getDocuments();
      }
    });
  }
}

function updateAttachment(){
  var form = $('#form1').get()[0];
  var data = new FormData( form );

  var id = $('#attachment_id').val();
  var rev = $('#attachment_rev').val();
  var filename = $('#attachment_filename').val();
  var name = $('#attachment_name').val();
  //var data = { _id: id, type: 'attachment', filename: filename, name: name };
  data['_id'] = id;
  data['type'] = 'attachment';
  data['filename'] = filename;
  data['name'] = name;
  if( rev ){ data['_rev'] = rev; }
  //console.log( data );

  $.ajax({
    type: 'POST',
    url: '/attachment',
    data: data,
    processData: false,
    contentType: false,
    dataType: 'json',
    success: function( data ){
      getAttachments();
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'updateAttachment: error' );
    }
  });
}

function editAttachment(attachment){
  $('#attachment_id').val( attachment._id );
  $('#attachment_rev').val( attachment._rev );
  $('#attachment_filename').val( attachment.filename );
  $('#attachment_name').val( attachment.name );
  $('#attachment_user_name').val( attachment.user.name );
}

function deleteAttachment(id){
  if( window.confirm( 'Delete Attachment?' ) ){
    console.log( 'deleteAttachment(): id=' + id );

    $.ajax({
      type: 'DELETE',
      url: '/attachment/' + id,
      data: {},
      success: function( data ){
        getAttachments();
      },
      error: function( jqXHR, textStatus, errorThrown ){
        console.log( textStatus );
        console.log( errorThrown );
        console.log( 'updateAttachment: error' );
        getAttachments();
      }
    });
  }
}

function classify(){
  var text = nicEditors.findEditor('document_body').getContent();
  $.ajax({
    type: 'POST',
    url: '/classify',
    data: { text: text },
    success: function( data ){
      console.log( data );
      if( data.classes && data.classes.length ){
        $('#document_category').val( data.classes[0].class_name );
      }
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'classify: error' );
    }
  });
}

function getNLC(){
  $.ajax({
    type: 'GET',
    url: '/trainingNLC',
    success: function( data ){
      console.log( data );
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'getNLC: error' );
    }
  });
}

function updateNLC(){
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  $.ajax({
    type: 'POST',
    url: '/trainingNLC',
    data: {},
    success: function( data ){
      obj.remove();
      console.log( data );
    },
    error: function( jqXHR, textStatus, errorThrown ){
      obj.remove();
      console.log( textStatus );
      console.log( errorThrown );
      console.log( 'updateNLC: error' );
    }
  });
}

function timestamp2datetime( ts ){
  var dt = new Date( ts );
  var yyyy = dt.getFullYear();
  var mm = dt.getMonth() + 1;
  var dd = dt.getDate();
  var hh = dt.getHours();
  var nn = dt.getMinutes();
  var ss = dt.getSeconds();
  var datetime = yyyy + '-' + ( mm < 10 ? '0' : '' ) + mm + '-' + ( dd < 10 ? '0' : '' ) + dd
    + ' ' + ( hh < 10 ? '0' : '' ) + hh + ':' + ( nn < 10 ? '0' : '' ) + nn + ':' + ( ss < 10 ? '0' : '' ) + ss;
  return datetime;
}

function handleFileSelect( evt ){
  $('#attachment_filename').val( '' );
  var files = evt.target.files;
  for( var i = 0; i < files.length; i ++ ){
    var file = files[i];
    //console.log( 'i = ' + i );
    //console.log( file );
    $('#attachment_filename').val( file.name );
  }
}
</script>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a href="/" class="navbar-brand" id="navbar_title"><%= config.title %></a>
  <div class="collapse navbar-collapse target">
    <ul class="navbar-nav mr-auto">
    </ul>
    <ul class="navbar-nav" id="navbar">
    </ul>
  </div>
</nav>

<%
if( user.role == 0 ){
%>
<div class="container" style="padding:20px 0; font-size:8px;">
  <table class="table table-hover table-bordered" id="config_table">
    <tbody id="config_table_tbody">
      <input type="hidden" id="config_id" value=""/>
      <input type="hidden" id="config_rev" value=""/>
      <tr>
        <td><%= __('admin.body.config.table.tbody.title') %></td>
        <td><input type="text" style="width:500px;" id="config_title" placeholder="<%= __('config.placeholder.title') %>" value=""/></td>
        <td rowspan='4'><input type="button" class="btn btn-primary" value="<%= __('config.buttonlabel.update') %>" onClick="updateConfig();"/></td>
      </tr>
      <tr>
        <td><%= __('admin.body.config.table.tbody.desc') %></td>
        <td><input type="text" style="width:500px;" id="config_desc" placeholder="<%= __('config.placeholder.desc') %>" value=""/></td>
      </tr>
      <tr>
        <td><%= __('admin.body.config.table.tbody.url') %></td>
        <td><input type="text" style="width:500px;" id="config_url" placeholder="<%= __('config.placeholder.url') %>" value=""/></td>
      </tr>
      <tr>
        <td><%= __('admin.body.config.table.tbody.image_url') %></td>
        <td><input type="text" style="width:500px;" id="config_image_url" placeholder="<%= __('config.placeholder.image_url') %>" value=""/></td>
      </tr>
    </tbody>
  </table>
</div>

<div class="container" style="padding:20px 0; font-size:8px;">
  <table class="table table-hover table-bordered" id="users_table">
    <thead class="table-inverse">
      <tr>
      <th>#</th>
      <th><%= __('admin.body.users.table.thead.id') %></th>
      <th><%= __('admin.body.users.table.thead.password') %></th>
      <th><%= __('admin.body.users.table.thead.name') %></th>
      <th><%= __('admin.body.users.table.thead.email') %></th>
      <th><%= __('admin.body.users.table.thead.role') %></th>
      <th><%= __('admin.body.users.table.thead.timestamp') %></th>
      <th><%= __('admin.body.users.table.thead.actions') %></th>
      </tr>
    </thead>
    <tbody id="users_table_tbody">
    </tbody>
  </table>
</div>
<%
}
%>

<div class="container" style="padding:20px 0; font-size:8px;">
  <table class="table table-hover table-bordered" id="documents_table">
    <thead class="table-inverse">
      <tr>
      <th>#</th>
      <th><%= __('admin.body.documents.table.thead.title') %></th>
      <th><%= __('admin.body.documents.table.thead.body') %></th>
      <th><%= __('admin.body.documents.table.thead.category') %></th>
      <th><%= __('admin.body.documents.table.thead.status') %></th>
      <th><%= __('admin.body.documents.table.thead.user.name') %></th>
      <th><%= __('admin.body.documents.table.thead.timestamp') %></th>
      <th><%= __('admin.body.documents.table.thead.actions') %></th>
      </tr>
    </thead>
    <tbody id="documents_table_tbody">
    </tbody>
  </table>
</div>

<%
if( config.nlc ){
%>
<div class="container" style="padding:0 0; font-size:8px;">
  <input type="button" class="btn btn-primary" value="<%= __('documents.buttonlabel.updatenlc') %>" onClick="updateNLC();"/>
  <input type="button" class="btn btn-primary" value="<%= __('documents.buttonlabel.getnlc') %>" onClick="getNLC();"/>
  <input type="button" class="btn btn-primary" value="<%= __('documents.buttonlabel.classify') %>" onClick="classify();"/>
</div>
<%
}
%>

<div class="container" style="padding:20px 0; font-size:8px;">
  <table class="table table-hover table-bordered" id="attachments_table">
    <thead class="table-inverse">
      <tr>
      <th>#</th>
      <th><%= __('admin.body.attachments.table.thead.file') %></th>
      <th><%= __('admin.body.attachments.table.thead.filename') %></th>
      <th><%= __('admin.body.attachments.table.thead.name') %></th>
      <th><%= __('admin.body.attachments.table.thead.user.name') %></th>
      <th><%= __('admin.body.attachments.table.thead.timestamp') %></th>
      <th><%= __('admin.body.attachments.table.thead.actions') %></th>
      </tr>
    </thead>
    <tbody id="attachments_table_tbody">
    </tbody>
  </table>
</div>

<%- include('./footer', {}) %>
